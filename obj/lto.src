	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z11print_fixedR7Fixed24
__Z11print_fixedR7Fixed24:
	ld	hl, -17
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, 6
	lea	bc, ix - 8
	ld	(ix - 11), bc
	ld	(ix - 1), d
	ld	hl, (hl)
	ld	(ix - 14), hl
	ld	hl, (_digits)
	ld	(ix - 17), hl
	ld	iy, 0
	ld	a, 4
BB0_1:
	push	de
	pop	hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB0_6
	push	de
	pop	hl
	ld	bc, 3
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_4
	ld	(ix - 5), 46
	jr	BB0_5
BB0_4:
	ld	iy, (ix - 14)
	lea	hl, iy
	ld	bc, 15
	call	__iand
	push	hl
	pop	bc
	ld	hl, (ix - 17)
	add	hl, bc
	ld	c, (hl)
	ld	hl, (ix - 11)
	add	hl, de
	ld	(hl), c
	lea	hl, iy
	ld	c, a
	call	__ishru
	ld	iy, 0
	ld	(ix - 14), hl
BB0_5:
	dec	de
	jr	BB0_1
BB0_6:
	ld	hl, (ix - 11)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	iy, -3145600
	call	_os_NewLine
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4sqrtR7Fixed24
__Z4sqrtR7Fixed24:
	call	__frameset0
	ld	hl, (ix + 9)
	ld	hl, (hl)
	push	hl
	call	_fp_sqrt
	pop	de
	ld	iy, (ix + 6)
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3sqr7Fixed24
__Z3sqr7Fixed24:
	call	__frameset0
	ld	hl, (ix + 9)
	push	hl
	call	_fp_sqr
	pop	de
	ld	iy, (ix + 6)
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3div7Fixed24S_
__Z3div7Fixed24S_:
	call	__frameset0
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	push	de
	push	hl
	call	_fp_div
	pop	de
	pop	de
	ld	iy, (ix + 6)
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z7clamp017Fixed24
__Z7clamp017Fixed24:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, 0
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB4_2
	or	a, a
	sbc	hl, hl
	jr	BB4_4
BB4_2:
	ld	bc, 4097
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jr	c, BB4_5
	ld	hl, 4096
BB4_4:
	ld	(iy), hl
	jr	BB4_6
BB4_5:
	lea	hl, ix + 9
	ld	a, (hl)
	ld	(iy), a
	ld	a, (ix + 10)
	ld	(iy + 1), a
	ld	a, (ix + 11)
	ld	(iy + 2), a
BB4_6:
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z6clamp07Fixed24
__Z6clamp07Fixed24:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, 0
	ld	hl, (ix + 9)
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB5_2
	ld	(iy), de
	jr	BB5_3
BB5_2:
	lea	hl, ix + 9
	ld	a, (hl)
	ld	(iy), a
	ld	a, (ix + 10)
	ld	(iy + 1), a
	ld	a, (ix + 11)
	ld	(iy + 2), a
BB5_3:
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4asin7Fixed24
__Z4asin7Fixed24:
	call	__frameset0
	ld	de, 4096
	ld	iy, _asin_table
	ld	hl, (ix + 9)
	add	hl, de
	ld	c, 7
	call	__ishrs
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	de, (iy)
	ld	hl, (ix + 6)
	ld	(hl), de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z5atan2R7Fixed24S0_
__Z5atan2R7Fixed24S0_:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 9)
	ld	hl, (hl)
	push	hl
	call	_fp_sqr
	ld	(ix - 3), hl
	pop	hl
	ld	hl, (ix + 12)
	ld	hl, (hl)
	push	hl
	call	_fp_sqr
	pop	de
	ld	de, (ix - 3)
	add	hl, de
	push	hl
	call	_fp_sqrt
	pop	de
	ld	iy, (ix + 9)
	ld	de, (iy)
	push	hl
	push	de
	call	_fp_div
	push	hl
	pop	bc
	pop	hl
	pop	hl
	ld	de, 4096
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB7_2
	ld	bc, 4096
BB7_2:
	ld	iy, _asin_table
	ld	de, -4095
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB7_4
	ld	bc, -4096
BB7_4:
	ld	hl, 4096
	or	a, a
	sbc	hl, bc
	ld	c, 7
	call	__ishru
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	de, 4096
	add	hl, de
	ld	c, 1
	call	__ishrs
	push	hl
	pop	de
	ld	hl, (ix + 12)
	ld	bc, (hl)
	ld	hl, 8192
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	push	bc
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB7_6
	lea	de, iy
BB7_6:
	ld	hl, (ix + 6)
	ld	(hl), de
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3dotR4Vec3S0_
__Z3dotR4Vec3S0_:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 9)
	ld	hl, (ix + 12)
	ld	hl, (hl)
	ld	de, (iy)
	push	hl
	push	de
	call	_fp_mul
	ld	(ix - 3), hl
	pop	hl
	pop	hl
	ld	iy, (ix + 12)
	ld	hl, (iy + 3)
	ld	iy, (ix + 9)
	ld	de, (iy + 3)
	push	hl
	push	de
	call	_fp_mul
	pop	de
	pop	de
	ld	de, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	iy, (ix + 12)
	ld	hl, (iy + 6)
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	push	hl
	push	de
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	iy, (ix - 3)
	add	iy, de
	ld	hl, (ix + 6)
	ld	(hl), iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9print_vec4Vec3
__Z9print_vec4Vec3:
	ld	hl, -3
	call	__frameset
	lea	hl, ix + 6
	ld	(ix - 3), hl
	push	hl
	call	__Z11print_fixedR7Fixed24
	pop	hl
	ld	iy, (ix - 3)
	pea	iy + 3
	call	__Z11print_fixedR7Fixed24
	pop	hl
	ld	iy, (ix - 3)
	pea	iy + 6
	call	__Z11print_fixedR7Fixed24
	pop	hl
	ld	iy, -3145600
	call	_os_NewLine
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z7rotateYRK4Vec3RKt
__Z7rotateYRK4Vec3RKt:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 12)
	ld	de, (hl)
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _cosLUT
	add	hl, de
	ld	bc, (hl)
	ld	hl, (ix + 9)
	ld	de, (hl)
	push	bc
	push	de
	call	_fp_mul
	ld	(ix - 6), hl
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	ld	de, (hl)
	ld	hl, (ix - 3)
	ld	l, e
	ld	h, d
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _sinLUT
	add	hl, de
	ld	hl, (hl)
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	push	hl
	push	de
	call	_fp_mul
	pop	de
	pop	de
	ld	de, (ix - 6)
	add	hl, de
	ld	(ix - 9), hl
	ld	iy, (ix + 9)
	ld	hl, (iy + 3)
	ld	(ix - 6), hl
	ld	hl, (ix + 12)
	ld	de, (hl)
	ld	hl, (ix - 3)
	ld	l, e
	ld	h, d
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _sinLUT
	add	hl, de
	ld	hl, (hl)
	call	__ineg
	ld	iy, (ix + 9)
	ld	de, (iy)
	push	hl
	push	de
	call	_fp_mul
	ld	(ix - 12), hl
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	ld	de, (hl)
	ld	hl, (ix - 3)
	ld	l, e
	ld	h, d
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _cosLUT
	add	hl, de
	ld	hl, (hl)
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	push	hl
	push	de
	call	_fp_mul
	pop	de
	pop	de
	ld	de, (ix - 12)
	add	hl, de
	ld	iy, (ix + 6)
	ld	de, (ix - 9)
	ld	(iy), de
	ld	de, (ix - 6)
	ld	(iy + 3), de
	ld	(iy + 6), hl
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z7rotateXRK4Vec3RKt
__Z7rotateXRK4Vec3RKt:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 9)
	ld	iy, (ix + 12)
	ld	hl, (hl)
	ld	(ix - 6), hl
	ld	bc, 3
	ld	de, (iy)
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	(ix - 3), hl
	call	__imulu
	push	hl
	pop	de
	ld	hl, _cosLUT
	add	hl, de
	ld	hl, (hl)
	ld	iy, (ix + 9)
	ld	de, (iy + 3)
	push	hl
	push	de
	call	_fp_mul
	ld	(ix - 9), hl
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	ld	de, (hl)
	ld	hl, (ix - 3)
	ld	l, e
	ld	h, d
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _sinLUT
	add	hl, de
	ld	hl, (hl)
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	push	hl
	push	de
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	hl, (ix + 12)
	ld	de, (hl)
	ld	hl, (ix - 3)
	ld	l, e
	ld	h, d
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _sinLUT
	add	hl, de
	ld	hl, (hl)
	ld	iy, (ix + 9)
	ld	de, (iy + 3)
	push	hl
	push	de
	call	_fp_mul
	ld	(ix - 12), hl
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	ld	de, (hl)
	ld	hl, (ix - 3)
	ld	l, e
	ld	h, d
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _cosLUT
	add	hl, de
	ld	hl, (hl)
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	push	hl
	push	de
	call	_fp_mul
	pop	de
	pop	de
	ld	de, (ix - 12)
	add	hl, de
	ld	iy, (ix + 6)
	ld	de, (ix - 6)
	ld	(iy), de
	ld	de, (ix - 9)
	ld	(iy + 3), de
	ld	(iy + 6), hl
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z7getScrXRK4Vec3
__Z7getScrXRK4Vec3:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, (_SCR_LEFT)
	ld	hl, (hl)
	or	a, a
	sbc	hl, de
	ld	de, (_inverseHorizontalSize)
	push	de
	push	hl
	call	_fp_mul
	pop	de
	pop	de
	ld	c, 12
	call	__ishrs
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z7getScrYRK4Vec3
__Z7getScrYRK4Vec3:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (_SCR_BOTTOM)
	ld	hl, (iy + 3)
	or	a, a
	sbc	hl, de
	ld	de, (_inverseVerticalSize)
	push	de
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	hl, 983040
	or	a, a
	sbc	hl, de
	ld	c, 12
	call	__ishrs
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9translateRK4Vec3
__Z9translateRK4Vec3:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 9)
	ld	de, (_cameraPos)
	ld	hl, (_cameraPos+3)
	ld	(ix - 6), hl
	ld	hl, (_cameraPos+6)
	ld	(ix - 3), hl
	ld	hl, (iy)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix + 9)
	ld	hl, (iy + 3)
	ld	de, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	iy, (ix + 9)
	ld	hl, (iy + 6)
	ld	de, (ix - 3)
	add	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	(iy), bc
	ld	de, (ix - 6)
	ld	(iy + 3), de
	ld	(iy + 6), hl
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -137
	call	__frameset
	ld	de, 0
	ld	iy, _cosLUT
	ld	hl, _sinLUT
	ld	(ix - 76), hl
	lea	hl, ix - 15
	ld	(ix - 67), hl
	lea	hl, ix - 24
	ld	(ix - 85), hl
	lea	hl, ix - 42
	ld	(ix - 73), hl
	lea	hl, ix - 33
	ld	(ix - 94), hl
	lea	hl, ix - 51
	ld	(ix - 103), hl
	lea	hl, ix - 62
	ld	(ix - 127), hl
	ld	bc, 628
BB15_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB15_3
	ld	(ix - 79), de
	push	de
	pop	hl
	ld	(ix - 70), iy
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	de
	pop	bc
	ld	a, l
	call	__ltof
	ld	hl, -3670016
	ld	e, 66
	call	__fdiv
	ld	l, a
	push	hl
	push	bc
	call	_cosf
	pop	bc
	pop	bc
	push	de
	push	hl
	ld	hl, (ix - 67)
	push	hl
	call	__ZN7Fixed24C2Ef
	ld	iy, (ix - 70)
	ld	bc, 628
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 67)
	ld	a, (hl)
	ld	(iy), a
	ld	a, (ix - 14)
	ld	(iy + 1), a
	ld	a, (ix - 13)
	ld	(iy + 2), a
	ld	de, (ix - 79)
	inc	de
	lea	iy, iy + 3
	jp	BB15_1
BB15_3:
	ld	de, 0
BB15_4:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB15_6
	push	de
	pop	hl
	ld	(ix - 70), de
	ld	iy, (ix - 70)
	add	iy, iy
	sbc	hl, hl
	ld	bc, (ix - 70)
	ld	a, l
	call	__ltof
	ld	hl, -3670016
	ld	e, 66
	call	__fdiv
	ld	l, a
	push	hl
	push	bc
	call	_sinf
	pop	bc
	pop	bc
	push	de
	push	hl
	ld	hl, (ix - 67)
	push	hl
	call	__ZN7Fixed24C2Ef
	ld	bc, 628
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 67)
	ld	a, (hl)
	ld	iy, (ix - 76)
	ld	(iy), a
	ld	a, (ix - 14)
	ld	(iy + 1), a
	ld	a, (ix - 13)
	ld	(iy + 2), a
	ld	hl, (ix - 70)
	inc	hl
	ld	(ix - 70), hl
	lea	iy, iy + 3
	ld	(ix - 76), iy
	ld	de, (ix - 70)
	jp	BB15_4
BB15_6:
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	de, 510
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 70), hl
	ld	hl, 32640
	ld	(ix - 76), hl
BB15_7:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB15_9
	ld	hl, (ix - 76)
	ld	bc, 31744
	call	__iand
	lea	de, iy
	push	hl
	pop	iy
	ld	hl, (ix - 70)
	ld	bc, 992
	call	__iand
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	bc
	ld	hl, -1900032
	add	hl, bc
	push	de
	ld	e, iyl
	ld	d, iyh
	ld	(hl), e
	inc	hl
	ld	(hl), d
	pop	de
	push	de
	pop	iy
	ld	de, 510
	ld	bc, 32640
	ld	hl, (ix - 76)
	add	hl, bc
	ld	(ix - 76), hl
	ld	bc, 4
	ld	hl, (ix - 70)
	add	hl, bc
	ld	(ix - 70), hl
	ld	bc, 2
	add	iy, bc
	jr	BB15_7
BB15_9:
	ld.sis	hl, 0
	ld	iy, -1900032
	ld	(iy), l
	ld	(iy + 1), h
	ld.sis	hl, 32767
	ld	iy, -1899524
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, _NUM_POINTS
	ld	iy, (hl)
	ld	de, 0
	push	de
	pop	hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld	(ix - 70), hl
	ld	bc, 9
	call	__imulu
	push	hl
	pop	bc
	ld	hl, 0
	add	hl, sp
	or	a, a
	sbc	hl, bc
	ld	(ix - 88), hl
	ld	sp, hl
	ld	(ix - 76), iy
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jr	z, BB15_11
	ld	hl, (ix - 70)
	ld	bc, 9
	call	__imulu
	push	hl
	pop	iy
	ld	de, -9
	add	hl, de
	call	__iremu
	push	hl
	pop	de
	lea	hl, iy
	or	a, a
	sbc	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 88)
	push	hl
	call	_memset
	ld	de, 0
	pop	hl
	pop	hl
	pop	hl
BB15_11:
	ld	iy, (ix - 88)
	lea	hl, iy + 3
	ld	(ix - 70), hl
	ld	bc, 0
	ld	hl, (ix - 76)
BB15_12:
	ld	e, l
	ld	d, h
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nc, BB15_14
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	(ix - 76), bc
	ld	bc, (ix - 76)
	ld	a, l
	call	__ltof
	ld	hl, -6039798
	ld	e, 60
	call	__fmul
	ld	hl, -8388608
	ld	e, 63
	call	__fadd
	ld	(ix - 79), bc
	ld	l, a
	ld	(ix - 82), hl
	push	hl
	push	bc
	ld	hl, (ix - 67)
	push	hl
	call	__ZN7Fixed24C2Ef
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 70)
	lea	hl, iy - 3
	lea	de, iy
	ld	iy, (ix - 67)
	ld	a, (iy)
	lea	bc, iy
	ld	(hl), a
	ld	a, (ix - 14)
	push	de
	pop	iy
	ld	(ix - 70), iy
	ld	(iy - 2), a
	ld	a, (ix - 13)
	ld	(iy - 1), a
	ld	hl, (ix - 82)
	push	hl
	ld	hl, (ix - 79)
	push	hl
	push	bc
	pop	hl
	push	hl
	call	__ZN7Fixed24C2Ef
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 67)
	ld	a, (hl)
	ld	iy, (ix - 70)
	ld	(iy), a
	ld	a, (ix - 14)
	ld	(iy + 1), a
	ld	a, (ix - 13)
	ld	(iy + 2), a
	ld	de, (ix - 82)
	push	de
	ld	de, (ix - 79)
	push	de
	push	hl
	call	__ZN7Fixed24C2Ef
	ld	bc, (ix - 76)
	ld	de, 0
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 70)
	lea	hl, iy + 3
	ld	(ix - 79), hl
	ld	hl, (ix - 67)
	ld	a, (hl)
	ld	hl, (ix - 79)
	ld	(hl), a
	ld	a, (ix - 14)
	ld	(iy + 4), a
	ld	a, (ix - 13)
	ld	(iy + 5), a
	inc	bc
	ld	hl, _NUM_POINTS
	ld	hl, (hl)
	lea	iy, iy + 9
	ld	(ix - 70), iy
	jp	BB15_12
BB15_14:
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	call	_gfx_ZeroScreen
	ld	l, 1
	ld	(ix - 89), l
	ld	(ix - 90), l
	ld	(ix - 91), l
	ld.sis	de, 31
	ld	c, e
	ld	b, d
BB15_15:
	ld	a, l
	and	a, 1
	bit	0, a
	jp	z, BB15_108
	push	af
	ld	a, iyl
	ld	(ix - 79), a
	pop	af
	ld	(ix - 76), bc
	ld	(ix - 70), de
	ld	(ix - 128), l
	call	_clock
	ld	(ix - 109), hl
	call	_kb_Scan
	ld	iy, -720866
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 8
	jr	nz, BB15_18
	ld	hl, (_cameraPos+3)
	ld	de, 4096
	add	hl, de
	ld	(_cameraPos+3), hl
BB15_18:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 1
	jr	nz, BB15_20
	ld	hl, (_cameraPos+3)
	ld	de, -4096
	add	hl, de
	ld	(_cameraPos+3), hl
BB15_20:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 2
	jr	nz, BB15_22
	ld	hl, (_cameraPos)
	ld	de, -4096
	add	hl, de
	ld	(_cameraPos), hl
BB15_22:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 4
	jr	nz, BB15_24
	ld	hl, (_cameraPos)
	ld	de, 4096
	add	hl, de
	ld	(_cameraPos), hl
BB15_24:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	(ix - 112), hl
	ld	a, l
	cp	a, 32
	ld	iyh, -1
	ld	a, iyh
	jr	nz, BB15_26
	ld	a, 0
BB15_26:
	or	a, (ix - 100)
	ld	l, a
	ld	a, (ix - 91)
	cpl
	and	a, 1
	bit	0, l
	jr	nz, BB15_28
	ld	(ix - 91), a
BB15_28:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	(ix - 115), hl
	ld	a, l
	cp	a, 2
	ld	a, iyh
	jr	nz, BB15_30
	ld	a, 0
BB15_30:
	or	a, (ix - 97)
	ld	l, a
	ld	a, (ix - 90)
	cpl
	and	a, 1
	bit	0, l
	jr	nz, BB15_32
	ld	(ix - 90), a
BB15_32:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	(ix - 118), hl
	ld	a, l
	cp	a, 1
	ld	a, iyh
	jr	nz, BB15_34
	ld	a, 0
BB15_34:
	or	a, (ix - 82)
	ld	l, a
	ld	a, (ix - 89)
	cpl
	and	a, 1
	bit	0, l
	jr	nz, BB15_36
	ld	(ix - 89), a
BB15_36:
	ld	hl, -720878
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld	a, c
	cp	a, -128
	ld	a, 1
	ld	e, a
	jr	z, BB15_38
	ld	a, 0
	ld	e, a
BB15_38:
	ld	hl, _POINTS_SHOWN
	ld	iy, (hl)
	ld	a, c
	cp	a, -128
	ld	(ix - 119), e
	jp	nz, BB15_50
	ld	hl, _NUM_POINTS
	ld	bc, (hl)
	ld	a, (ix - 106)
	and	a, 1
	xor	a, 1
	ld	e, a
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	or	a, a
	sbc.sis	hl, bc
	sbc	a, a
	and	a, e
	xor	a, 1
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	ld	l, -1
	jr	z, BB15_41
	ld	l, 0
BB15_41:
	or	a, l
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 10
	add.sis	hl, bc
	ld	d, a
	bit	0, a
	jr	nz, BB15_43
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB15_43:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	ld	a, -1
	jr	z, BB15_45
	ld	a, 0
BB15_45:
	and	a, e
	bit	0, a
	ld.sis	bc, 10
	ld	hl, _POINTS_SHOWN
	jr	nz, BB15_47
	ld	c, iyl
	ld	b, iyh
BB15_47:
	bit	0, a
	jr	nz, BB15_49
	bit	0, d
	jr	nz, BB15_51
BB15_49:
	ld	(hl), c
	inc	hl
	ld	(hl), b
	jr	BB15_51
BB15_50:
	ld	c, iyl
	ld	b, iyh
BB15_51:
	ld	hl, -720872
	push	af
	ld	a, (ix - 79)
	ld	iyl, a
	pop	af
	ld	d, -1
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, -128
	ld	iyh, d
	jr	z, BB15_53
	ld	iyh, 0
BB15_53:
	ld	a, iyh
	and	a, 1
	ld	(ix - 120), a
	ld	(ix - 82), bc
	ld	l, c
	ld	h, b
	ld.sis	bc, 10
	or	a, a
	sbc.sis	hl, bc
	ld	l, d
	jr	z, BB15_55
	ld	l, 0
BB15_55:
	ld	a, iyh
	and	a, l
	ld	l, a
	ld	a, iyl
	and	a, 1
	xor	a, 1
	ld	iyl, a
	ld	a, l
	and	a, iyl
	ld	(ix - 79), a
	bit	0, a
	ld.sis	bc, 1
	jr	nz, BB15_57
	ld	bc, (ix - 82)
BB15_57:
	ld	l, c
	ld	h, b
	ld.sis	de, 11
	or	a, a
	sbc.sis	hl, de
	ccf
	sbc	a, a
	ld	l, a
	ld	a, iyh
	and	a, l
	and	a, iyl
	ld	l, c
	ld	h, b
	ld.sis	de, -10
	add.sis	hl, de
	bit	0, a
	ld	e, l
	ld	d, h
	jr	nz, BB15_59
	ld	e, c
	ld	d, b
BB15_59:
	bit	0, (ix - 79)
	ld	hl, _POINTS_SHOWN
	jr	nz, BB15_61
	bit	0, a
	jr	z, BB15_62
BB15_61:
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB15_62:
	ld	hl, _NUM_POINTS
	ld	c, e
	ld	b, d
	ld	de, (hl)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jr	nc, BB15_64
	ld	hl, _POINTS_SHOWN
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB15_64:
	ld	iy, -720872
	ld	e, (iy)
	ld	d, (iy + 1)
	ld	iy, (ix - 70)
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, -5
	add.sis	hl, bc
	ld	a, e
	cp	a, 8
	jr	z, BB15_66
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
BB15_66:
	ld	c, l
	ld	b, h
	ld	hl, -720872
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, c
	ld	h, b
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld.sis	bc, 5
	add.sis	iy, bc
	ld	a, e
	cp	a, 2
	jr	z, BB15_68
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB15_68:
	ld	(ix - 70), iy
	ld	hl, -720870
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	hl, (ix - 76)
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	add.sis	iy, bc
	ld	a, e
	cp	a, 4
	jr	z, BB15_70
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB15_70:
	ld	hl, -720874
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, -5
	add.sis	iy, bc
	ld	a, e
	cp	a, 4
	jr	z, BB15_72
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB15_72:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 628
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld.sis	de, 0
	jp	p, BB15_74
	ld	e, iyl
	ld	d, iyh
BB15_74:
	ld	l, e
	ld	h, d
	ld.sis	bc, 0
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	ld.sis	hl, 627
	ld	(ix - 76), hl
	jp	m, BB15_76
	ld	(ix - 76), de
BB15_76:
	ld	bc, (ix - 70)
	ld	l, c
	ld	h, b
	ld.sis	de, 628
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld.sis	de, 0
	jp	p, BB15_78
	ld	e, c
	ld	d, b
BB15_78:
	ld	l, e
	ld	h, d
	ld.sis	bc, 0
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	ld.sis	hl, 627
	ld	(ix - 79), hl
	jp	m, BB15_80
	ld	(ix - 79), de
BB15_80:
	ld	a, (ix - 90)
	and	a, 1
	bit	0, a
	call	nz, _gfx_ZeroScreen
	ld	a, (ix - 89)
	and	a, 1
	ld	(ix - 121), a
	bit	0, a
	ld	hl, _POINTS_SHOWN
	ld	de, 0
	ld	bc, 0
	ld	iy, (ix - 88)
	jp	z, BB15_82
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, _origin
	push	hl
	ld	hl, (ix - 67)
	push	hl
	call	__Z9translateRK4Vec3
	pop	hl
	pop	hl
	ld	hl, (ix - 76)
	ld	(ix - 51), l
	ld	(ix - 50), h
	pea	ix - 51
	ld	hl, _xLine
	push	hl
	ld	hl, (ix - 73)
	push	hl
	call	__Z7rotateYRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 79)
	ld	(ix - 62), l
	ld	(ix - 61), h
	pea	ix - 62
	ld	hl, (ix - 73)
	push	hl
	pea	ix - 33
	call	__Z7rotateXRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	de, (_cameraPos)
	ld	hl, (_cameraPos+3)
	ld	(ix - 82), hl
	ld	hl, (_cameraPos+6)
	ld	(ix - 70), hl
	ld	hl, (ix - 33)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 30)
	ld	de, (ix - 82)
	add	iy, de
	ld	hl, (ix - 27)
	ld	de, (ix - 70)
	add	hl, de
	ld	(ix - 24), bc
	ld	(ix - 21), iy
	ld	(ix - 18), hl
	ld	hl, (ix - 76)
	ld	(ix - 62), l
	ld	(ix - 61), h
	pea	ix - 62
	ld	hl, _yLine
	push	hl
	ld	hl, (ix - 103)
	push	hl
	call	__Z7rotateYRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 79)
	ld	(ix - 53), l
	ld	(ix - 52), h
	pea	ix - 53
	ld	hl, (ix - 103)
	push	hl
	pea	ix - 42
	call	__Z7rotateXRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	de, (_cameraPos)
	ld	hl, (_cameraPos+3)
	ld	(ix - 82), hl
	ld	hl, (_cameraPos+6)
	ld	(ix - 70), hl
	ld	hl, (ix - 42)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 39)
	ld	de, (ix - 82)
	add	iy, de
	ld	hl, (ix - 36)
	ld	de, (ix - 70)
	add	hl, de
	ld	(ix - 33), bc
	ld	(ix - 30), iy
	ld	(ix - 27), hl
	ld	hl, (ix - 76)
	ld	(ix - 53), l
	ld	(ix - 52), h
	pea	ix - 53
	ld	hl, _zLine
	push	hl
	ld	hl, (ix - 127)
	push	hl
	call	__Z7rotateYRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 79)
	ld	(ix - 64), l
	ld	(ix - 63), h
	pea	ix - 64
	ld	hl, (ix - 127)
	push	hl
	pea	ix - 51
	call	__Z7rotateXRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	de, (_cameraPos)
	ld	hl, (_cameraPos+3)
	ld	(ix - 82), hl
	ld	hl, (_cameraPos+6)
	ld	(ix - 70), hl
	ld	hl, (ix - 51)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 48)
	ld	de, (ix - 82)
	add	iy, de
	ld	hl, (ix - 45)
	ld	de, (ix - 70)
	add	hl, de
	ld	(ix - 42), bc
	ld	(ix - 39), iy
	ld	(ix - 36), hl
	ld	hl, (ix - 67)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	(ix - 70), hl
	pop	hl
	ld	hl, (ix - 67)
	push	hl
	call	__Z7getScrYRK4Vec3
	ld	(ix - 82), hl
	pop	hl
	ld	hl, (ix - 85)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	(ix - 97), hl
	pop	hl
	ld	hl, (ix - 85)
	push	hl
	call	__Z7getScrYRK4Vec3
	ld	(ix - 106), hl
	pop	hl
	ld	hl, (ix - 94)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	(ix - 100), hl
	pop	hl
	ld	hl, (ix - 94)
	push	hl
	call	__Z7getScrYRK4Vec3
	ld	bc, -131
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, (ix - 73)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	(ix - 124), hl
	pop	hl
	ld	hl, (ix - 73)
	push	hl
	call	__Z7getScrYRK4Vec3
	ld	bc, -134
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, (ix - 85)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	bc, -137
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, (ix - 85)
	push	hl
	call	__Z7getScrYRK4Vec3
	pop	de
	ld	de, -10
	add	hl, de
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.17
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, (ix - 94)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	bc, -137
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, (ix - 94)
	push	hl
	call	__Z7getScrYRK4Vec3
	pop	de
	ld	de, -10
	add	hl, de
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.18
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, (ix - 73)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	bc, -137
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, (ix - 73)
	push	hl
	call	__Z7getScrYRK4Vec3
	pop	de
	ld	de, -10
	add	hl, de
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.19
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, (ix - 106)
	push	hl
	ld	hl, (ix - 97)
	push	hl
	ld	hl, (ix - 82)
	push	hl
	ld	hl, (ix - 70)
	push	hl
	call	_gfx_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -131
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix - 100)
	push	hl
	ld	hl, (ix - 82)
	push	hl
	ld	hl, (ix - 70)
	push	hl
	call	_gfx_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -134
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix - 124)
	push	hl
	ld	hl, (ix - 82)
	push	hl
	ld	hl, (ix - 70)
	push	hl
	call	_gfx_Line
	ld	iy, (ix - 88)
	ld	bc, 0
	ld	de, 0
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _POINTS_SHOWN
BB15_82:
	ld	a, (ix - 91)
	and	a, 1
	ld	(ix - 106), a
	ld	(ix - 70), iy
	ld	(ix - 82), de
BB15_83:
	ld	hl, (hl)
	push	bc
	pop	de
	ld	e, l
	ld	d, h
	ld	hl, (ix - 82)
	or	a, a
	sbc	hl, de
	jp	nc, BB15_95
	ld	de, (ix - 67)
	ld	hl, (ix - 70)
	ld	bc, 9
	ldir
	ld	hl, (_sigma)
	ld	de, (_dt)
	push	hl
	push	de
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	bc, (ix - 15)
	ld	(ix - 97), bc
	ld	hl, (ix - 12)
	ld	(ix - 100), hl
	or	a, a
	sbc	hl, bc
	push	hl
	push	de
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	iy, (ix - 70)
	ld	hl, (iy)
	add	hl, de
	ld	(iy), hl
	ld	de, (ix - 9)
	ld	(ix - 124), de
	ld	hl, (_rho)
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, (ix - 97)
	push	hl
	call	_fp_mul
	pop	de
	pop	de
	ld	de, (ix - 100)
	or	a, a
	sbc	hl, de
	ld	de, (_dt)
	push	hl
	push	de
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	iy, (ix - 70)
	ld	hl, (iy + 3)
	add	hl, de
	ld	(iy + 3), hl
	ld	hl, (ix - 100)
	push	hl
	ld	hl, (ix - 97)
	push	hl
	call	_fp_mul
	ld	(ix - 97), hl
	pop	hl
	pop	hl
	ld	hl, (_beta)
	ld	de, (ix - 124)
	push	de
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	hl, (ix - 97)
	or	a, a
	sbc	hl, de
	ld	de, (_dt)
	push	hl
	push	de
	call	_fp_mul
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	iy, (ix - 70)
	ld	hl, (iy + 6)
	add	hl, de
	ld	(ix - 124), hl
	ld	(iy + 6), hl
	ld	hl, (ix - 76)
	ld	(ix - 51), l
	ld	(ix - 50), h
	pea	ix - 51
	push	iy
	ld	hl, (ix - 73)
	push	hl
	call	__Z7rotateYRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 79)
	ld	(ix - 62), l
	ld	(ix - 61), h
	pea	ix - 62
	ld	hl, (ix - 73)
	push	hl
	pea	ix - 33
	call	__Z7rotateXRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	de, (_cameraPos)
	ld	hl, (_cameraPos+3)
	ld	(ix - 100), hl
	ld	hl, (_cameraPos+6)
	ld	(ix - 97), hl
	ld	hl, (ix - 33)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 30)
	ld	de, (ix - 100)
	add	iy, de
	ld	hl, (ix - 27)
	ld	de, (ix - 97)
	add	hl, de
	ld	(ix - 24), bc
	ld	(ix - 21), iy
	ld	(ix - 18), hl
	ld	hl, (ix - 85)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	(ix - 97), hl
	pop	hl
	ld	hl, (ix - 85)
	push	hl
	call	__Z7getScrYRK4Vec3
	push	hl
	pop	bc
	pop	hl
	ld	hl, (ix - 97)
	ld	de, 320
	or	a, a
	sbc	hl, de
	jp	nc, BB15_94
	push	bc
	pop	hl
	ld	de, 240
	or	a, a
	sbc	hl, de
	jp	nc, BB15_94
	ld	(ix - 100), bc
	ld	hl, 20480
	push	hl
	ld	hl, (ix - 124)
	push	hl
	call	_fp_mul
	pop	de
	pop	de
	ld	c, 12
	call	__ishrs
	push	hl
	pop	de
	ld.sis	bc, 253
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	m, BB15_88
	ld.sis	hl, 253
	ld	e, l
	ld	d, h
BB15_88:
	ld	l, e
	ld	h, d
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	p, BB15_90
	ld.sis	hl, 1
	ld	e, l
	ld	d, h
BB15_90:
	push	de
	call	_gfx_SetColor
	pop	hl
	bit	0, (ix - 106)
	jp	nz, BB15_92
	ld	hl, (ix - 76)
	ld	(ix - 62), l
	ld	(ix - 61), h
	pea	ix - 62
	ld	hl, (ix - 67)
	push	hl
	ld	hl, (ix - 103)
	push	hl
	call	__Z7rotateYRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 79)
	ld	(ix - 53), l
	ld	(ix - 52), h
	pea	ix - 53
	ld	hl, (ix - 103)
	push	hl
	pea	ix - 42
	call	__Z7rotateXRK4Vec3RKt
	pop	hl
	pop	hl
	pop	hl
	ld	de, (_cameraPos)
	ld	hl, (_cameraPos+3)
	ld	bc, -131
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (_cameraPos+6)
	ld	(ix - 124), hl
	ld	hl, (ix - 42)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 39)
	ld	(ix - 3), bc
	ld	bc, -131
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	add	iy, de
	ld	hl, (ix - 36)
	ld	de, (ix - 124)
	add	hl, de
	ld	bc, (ix - 3)
	ld	(ix - 33), bc
	ld	(ix - 30), iy
	ld	(ix - 27), hl
	ld	hl, (ix - 94)
	push	hl
	call	__Z7getScrXRK4Vec3
	ld	(ix - 124), hl
	pop	hl
	ld	hl, (ix - 94)
	push	hl
	call	__Z7getScrYRK4Vec3
	pop	de
	ld	de, (ix - 100)
	push	de
	ld	de, (ix - 97)
	push	de
	push	hl
	ld	hl, (ix - 124)
	push	hl
	call	_gfx_Line
	pop	hl
	pop	hl
	jr	BB15_93
BB15_92:
	ld	hl, (ix - 100)
	push	hl
	ld	hl, (ix - 97)
	push	hl
	call	_gfx_SetPixel
BB15_93:
	pop	hl
	pop	hl
BB15_94:
	ld	hl, (ix - 82)
	inc	hl
	ld	(ix - 82), hl
	ld	iy, (ix - 70)
	lea	iy, iy + 9
	ld	(ix - 70), iy
	ld	hl, _POINTS_SHOWN
	ld	bc, 0
	jp	BB15_83
BB15_95:
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 200
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.20
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, _POINTS_SHOWN
	ld	hl, (hl)
	ld	bc, 0
	push	bc
	pop	de
	ld	e, l
	ld	d, h
	push	bc
	push	de
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 210
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.21
	push	hl
	call	_gfx_PrintString
	pop	hl
	bit	0, (ix - 121)
	ld	hl, _.str.23
	jr	z, BB15_97
	ld	hl, _.str.22
BB15_97:
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 220
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.24
	push	hl
	call	_gfx_PrintString
	pop	hl
	bit	0, (ix - 106)
	ld	hl, _.str.26
	jr	z, BB15_99
	ld	hl, _.str.25
BB15_99:
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_clock
	ld	de, (ix - 109)
	or	a, a
	sbc	hl, de
	ld	(ix - 70), hl
	ld	hl, 230
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.27
	push	hl
	call	_gfx_PrintString
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 70)
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 1
	ld	l, 0
	jr	z, BB15_101
	ld	l, (ix - 128)
BB15_101:
	ld	de, (ix - 112)
	ld	a, e
	cp	a, 32
	ld	e, -1
	ld	a, e
	ld	h, (ix - 119)
	jr	z, BB15_103
	ld	a, 0
BB15_103:
	ld	(ix - 100), a
	ld	bc, (ix - 115)
	ld	a, c
	cp	a, 2
	ld	a, e
	jr	z, BB15_105
	ld	a, 0
BB15_105:
	ld	(ix - 97), a
	ld	bc, (ix - 118)
	ld	a, c
	cp	a, 1
	jr	z, BB15_107
	ld	a, 0
	ld	e, a
BB15_107:
	ld	(ix - 82), e
	push	af
	ld	a, (ix - 120)
	ld	iyl, a
	pop	af
	ld	(ix - 106), h
	ld	de, (ix - 79)
	ld	bc, (ix - 76)
	jp	BB15_15
BB15_108:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN7Fixed24C2Ef
__ZN7Fixed24C2Ef:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	bc, (ix + 9)
	ld	hl, -8388608
	ld	e, 69
	ld	a, (ix + 12)
	call	__fmul
	call	__ftol
	ld	(iy), bc
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"0123456789ABCDEF", 0

	section	.data,"aw",@progbits
	public	_digits
_digits:
	dl	_.str

	section	.data,"aw",@progbits
	public	_asin_table
_asin_table:
	dl	16773120
	dl	16773774
	dl	16774047
	dl	16774259
	dl	16774438
	dl	16774598
	dl	16774743
	dl	16774878
	dl	16775005
	dl	16775125
	dl	16775240
	dl	16775350
	dl	16775456
	dl	16775559
	dl	16775659
	dl	16775756
	dl	16775851
	dl	16775944
	dl	16776036
	dl	16776126
	dl	16776214
	dl	16776301
	dl	16776388
	dl	16776473
	dl	16776558
	dl	16776641
	dl	16776725
	dl	16776807
	dl	16776890
	dl	16776972
	dl	16777053
	dl	16777135
	dl	0
	dl	81
	dl	163
	dl	244
	dl	326
	dl	409
	dl	491
	dl	575
	dl	658
	dl	743
	dl	828
	dl	915
	dl	1002
	dl	1090
	dl	1180
	dl	1272
	dl	1365
	dl	1460
	dl	1557
	dl	1657
	dl	1760
	dl	1866
	dl	1976
	dl	2091
	dl	2211
	dl	2338
	dl	2473
	dl	2618
	dl	2778
	dl	2957
	dl	3169
	dl	3442
	dl	4096

	section	.bss,"aw",@nobits
	public	_cosLUT
_cosLUT:
	rb	1884

	section	.bss,"aw",@nobits
	public	_sinLUT
_sinLUT:
	rb	1884

	section	.data,"aw",@progbits
	public	_NUM_POINTS
_NUM_POINTS:
	dw	400

	section	.data,"aw",@progbits
	public	_POINTS_SHOWN
_POINTS_SHOWN:
	dw	1

	section	.data,"aw",@progbits
	public	_SCR_LEFT
_SCR_LEFT:
	dl	16613376

	section	.data,"aw",@progbits
	public	_SCR_RIGHT
_SCR_RIGHT:
	dl	163840

	section	.data,"aw",@progbits
	public	_SCR_TOP
_SCR_TOP:
	dl	163840

	section	.data,"aw",@progbits
	public	_SCR_BOTTOM
_SCR_BOTTOM:
	dl	16613376

	section	.bss,"aw",@nobits
	public	_origin
_origin:
	rb	9

	section	.data,"aw",@progbits
	public	_xLine
_xLine:
	dl	81920
	db	3 dup 0
	db	3 dup 0

	section	.data,"aw",@progbits
	public	_yLine
_yLine:
	db	3 dup 0
	dl	81920
	db	3 dup 0

	section	.data,"aw",@progbits
	public	_zLine
_zLine:
	db	3 dup 0
	db	3 dup 0
	dl	81920

	section	.bss,"aw",@nobits
	public	_cameraPos
_cameraPos:
	rb	9

	section	.data,"aw",@progbits
	public	_inverseHorizontalSize
_inverseHorizontalSize:
	dl	16384

	section	.data,"aw",@progbits
	public	_inverseVerticalSize
_inverseVerticalSize:
	dl	12288

	section	.data,"aw",@progbits
	public	_rho
_rho:
	dl	114688

	section	.data,"aw",@progbits
	public	_sigma
_sigma:
	dl	40960

	section	.data,"aw",@progbits
	public	_beta
_beta:
	dl	10922

	section	.data,"aw",@progbits
	public	_dt
_dt:
	dl	81

	section	.rodata,"a",@progbits
	private	_.str.17
_.str.17:
	db	"X", 0

	section	.rodata,"a",@progbits
	private	_.str.18
_.str.18:
	db	"Y", 0

	section	.rodata,"a",@progbits
	private	_.str.19
_.str.19:
	db	"Z", 0

	section	.rodata,"a",@progbits
	private	_.str.20
_.str.20:
	db	"Points shown: ", 0

	section	.rodata,"a",@progbits
	private	_.str.21
_.str.21:
	db	"Draw axes: ", 0

	section	.rodata,"a",@progbits
	private	_.str.22
_.str.22:
	db	"On", 0

	section	.rodata,"a",@progbits
	private	_.str.23
_.str.23:
	db	"Off", 0

	section	.rodata,"a",@progbits
	private	_.str.24
_.str.24:
	db	"Draw mode: ", 0

	section	.rodata,"a",@progbits
	private	_.str.25
_.str.25:
	db	"Points", 0

	section	.rodata,"a",@progbits
	private	_.str.26
_.str.26:
	db	"Lines", 0

	section	.rodata,"a",@progbits
	private	_.str.27
_.str.27:
	db	"Frame time: ", 0

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	_fp_sqrt
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_gfx_Line
	extern	__fadd
	extern	_gfx_PrintString
	extern	_fp_sqr
	extern	__ftol
	extern	_gfx_PrintInt
	extern	__setflag
	extern	__iand
	extern	_os_PutStrFull
	extern	_sinf
	extern	__ltof
	extern	__ineg
	extern	_cosf
	extern	_memset
	extern	__frameset
	extern	_kb_Scan
	extern	_fp_mul
	extern	__ishrs
	extern	__ishru
	extern	_gfx_SwapDraw
	extern	__fmul
	extern	_gfx_SetDraw
	extern	__Unwind_SjLj_Unregister
	extern	_fp_div
	extern	__iremu
	extern	_gfx_ZeroScreen
	extern	__fdiv
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_SetPixel
	extern	_os_NewLine
	extern	_gfx_End
	extern	__frameset0
	extern	_gfx_SetTextXY
	extern	_clock
